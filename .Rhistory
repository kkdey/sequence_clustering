mu.s=spike.f(t)
pos = c(.1, .13, .15, .23, .25, .40, .44, .65, .76, .78, .81)
hgt = 2.97/5*c(4, 5, 3, 4, 5, 4.2, 2.1, 4.3, 3.1, 5.1, 4.2)
wth = c(.005, .005, .006, .01, .01, .03, .01, .01, .005, .008, .005)
mu.b = rep(0,n)
for(j in 1:length(pos)){
mu.b = mu.b + hgt[j]/(( 1 + (abs(t - pos[j])/wth[j]))^4)
}
dop.f=function(x) sqrt(x*(1-x))*sin((2*pi*1.05)/(x+0.05))
mu.dop=dop.f(t)
mu.dop=3/(max(mu.dop)-min(mu.dop))*(mu.dop-min(mu.dop))
sig=((2*t + 0.5)*(t <= 0.15)) +
((-12*(t-0.15) + 0.8)*(t > 0.15 & t <= 0.2)) +
0.2*(t > 0.2 & t <= 0.5) +
((6*(t - 0.5) + 0.2)*(t > 0.5 & t <= 0.6)) +
((-10*(t - 0.6) + 0.8)*(t > 0.6 & t <= 0.65)) +
((-0.5*(t - 0.65) + 0.3)*(t > 0.65 & t <= 0.85)) +
((2*(t - 0.85) + 0.2)*(t > 0.85))
mu.ang = 3/5*((5/(max(sig)-min(sig)))*sig - 1.6)-0.0419569
heavi = 4 * sin(4 * pi * t) - sign(t - 0.3) - sign(0.72 - t)
mu.hs = heavi/sqrt(var(heavi)) * 1 * 2.99 / 3.366185
mu.hs = mu.hs - min(mu.hs)
pos=c(.1, .13, .15, .23, .25, .40, .44, .65, .76, .78, .81)
hgt = 2.88/5*c(4, (-5), 3, (-4), 5, (-4.2), 2.1, 4.3, (-3.1), 2.1, (-4.2))
mu.blk = rep(0,n)
for(j in 1:length(pos)){
mu.blk = mu.blk + (1 + sign(t-pos[j]))*(hgt[j]/2)
}
mu.cblk=mu.blk
mu.cblk[mu.cblk<0]=0
mu.cor=623.87*t^3*(1-2*t)*(t>=0&t<=0.5)+187.161*(0.125-t^3)*t^4*(t>0.5&t<=0.8)+3708.470441*(t-1)^3*(t>0.8&t<=1)
mu.cor=(0.6/(max(mu.cor)-min(mu.cor)))*mu.cor
mu.cor=mu.cor-min(mu.cor)+0.2
mse=function(x,y) mean((x-y)^2)
l2norm=function(x) sum(x^2)
mise=function(x,y) 10000*mean(apply(x-rep(1,100)%o%y,1,l2norm)/l2norm(y))
waveti.ebayes.old=function (x, filter.number = 10, family = "DaubLeAsymm", min.level = 3, noise.level){
n=length(x)
J=log2(n)
x.w <- wd(x, filter.number, family, type = "station")
for(j in min.level:(J-1)){
x.pm = ebayesthresh(accessD(x.w,j),sdev=noise.level)
x.w = putD(x.w,j,x.pm)
}
mu.est=AvBasis(convert(x.w))
return(mu.est)
}
waveti.ebayes=function (x, filter.number = 10, family = "DaubLeAsymm", min.level = 3, noise.level){
n=length(x)
J=log2(n)
x.w <- wd(x, filter.number, family, type = "station")
x.w <- ebayesthresh.wavelet(x.w, vscale = noise.level, a = NA, threshrule = "mean")
mu.est=AvBasis(convert(x.w))
return(mu.est)
}
mu.t=(1+mu.s)/5
#mu.t=(1+mu.b)/5
#mu.t=(1+mu.blk)/5
#mu.t=(1+mu.ang)/5
#mu.t=(1+mu.dop)/5
#mu.t=mu.blip
#mu.t=mu.cor
rsnr=sqrt(1)
var1=rep(1,n)
var2=(0.0001+4*(exp(-550*(t-0.2)^2)+exp(-200*(t-0.5)^2)+exp(-950*(t-0.8)^2)))/1.35
var4=3.4*(2+mu.dop)
var5=0.00001+1*(mu.cblk-min(mu.cblk))/max(mu.cblk)
sigma.ini=sqrt(var2)
sigma.t=sigma.ini/mean(sigma.ini)*sd(mu.t)/rsnr^2
#sigma.t=sd(mu.t)/rsnr^2
set.seed(327)
X.s=rnorm(n,mu.t,sigma.t)
set.seed(1107)
X.s=matrix(rnorm(100*n,mu.t,sigma.t),nrow=100,byrow=TRUE)
set.seed(327)
X.s=rnorm(n,mu.t,sigma.t)
set.seed(327)
X.s=rnorm(n,mu.t,sigma.t)
mu.t=(1+mu.s)/5
#mu.t=(1+mu.b)/5
#mu.t=(1+mu.blk)/5
#mu.t=(1+mu.ang)/5
#mu.t=(1+mu.dop)/5
#mu.t=mu.blip
#mu.t=mu.cor
rsnr=sqrt(1)
var1=rep(1,n)
var2=(0.0001+4*(exp(-550*(t-0.2)^2)+exp(-200*(t-0.5)^2)+exp(-950*(t-0.8)^2)))/1.35
var4=3.4*(2+mu.dop)
var5=0.00001+1*(mu.cblk-min(mu.cblk))/max(mu.cblk)
sigma.ini=sqrt(var1)
sigma.t=sigma.ini/mean(sigma.ini)*sd(mu.t)/rsnr^2
#sigma.t=sd(mu.t)/rsnr^2
set.seed(327)
X.s=rnorm(n,mu.t,sigma.t)
sigma.t
tt1=waveti.ebayes.old(X.s,filter.number=8,noise.level=sigma.t)
tt1=waveti.ebayes.old(X.s,filter.number=8,noise.level=sigma.t[1])
tt2=waveti.ebayes(X.s,filter.number=8,noise.level=sigma.t[1])
mse(tt1,mu.t)
mse(tt2,mu.t)
waveti.ebayes=function (x, filter.number = 10, family = "DaubLeAsymm", min.level = 3, noise.level){
n=length(x)
J=log2(n)
x.w <- wd(x, filter.number, family, type = "station")
x.w <- ebayesthresh.wavelet(x.w, vscale = noise.level, smooth.levels = J - min.level + 1, a = NA, threshrule = "mean")
mu.est=AvBasis(convert(x.w))
return(mu.est)
}
tt2=waveti.ebayes(X.s,filter.number=8,noise.level=sigma.t[1])
mse(tt1,mu.t)
mse(tt2,mu.t)
waveti.ebayes=function (x, filter.number = 10, family = "DaubLeAsymm", min.level = 3, noise.level){
n=length(x)
J=log2(n)
x.w <- wd(x, filter.number, family, type = "station")
x.w <- ebayesthresh.wavelet(x.w, vscale = noise.level, smooth.levels = J - min.level + 1)
mu.est=AvBasis(convert(x.w))
return(mu.est)
}
tt1=waveti.ebayes.old(X.s,filter.number=8,noise.level=sigma.t[1])
tt2=waveti.ebayes(X.s,filter.number=8,noise.level=sigma.t[1])
mse(tt1,mu.t)
mse(tt2,mu.t)
waveti.ebayes=function (x, filter.number = 10, family = "DaubLeAsymm", min.level = 3, noise.level){
n=length(x)
J=log2(n)
x.w <- wd(x, filter.number, family, type = "station")
x.w <- ebayesthresh.wavelet(x.w, vscale = noise.level, smooth.levels = J - min.level)
mu.est=AvBasis(convert(x.w))
return(mu.est)
}
tt1=waveti.ebayes.old(X.s,filter.number=8,noise.level=sigma.t[1])
tt2=waveti.ebayes(X.s,filter.number=8,noise.level=sigma.t[1])
mse(tt1,mu.t)
mse(tt2,mu.t)
waveti.ebayes=function (x, filter.number = 10, family = "DaubLeAsymm", min.level = 3, noise.level){
n=length(x)
J=log2(n)
x.w <- wd(x, filter.number, family, type = "station")
x.w <- ebayesthresh.wavelet(x.w, vscale = noise.level, smooth.levels = J - min.level, a = NA, threshrule = "mean")
mu.est=AvBasis(convert(x.w))
return(mu.est)
}
tt1=waveti.ebayes.old(X.s,filter.number=8,noise.level=sigma.t[1])
tt2=waveti.ebayes(X.s,filter.number=8,noise.level=sigma.t[1])
mse(tt1,mu.t)
mse(tt2,mu.t)
2600/41000
1/16
x=1:3
y=2:4
!(x%in%y)
2467-60+90
2497+170
2497-2191
306*2.4*1.2
2350+30
2380-2191
189*2.4*1.2
189*2.4
library(smash)
y = rpois(1024, 0)
y = rpois(1024, 1)
y
mean(y)
est = smooth.pois(y)
est = ashsmooth.pois(y)
plot(est,type='l')
plot(est,type='l', ylim=c(0,1))
plot(est,type='l', ylim=c(0.5, 1.5))
y = rpois(1024, 100)
est = ashsmooth.pois(y)
plot(est,type='l', ylim=c(0.5, 1.5))
plot(est,type='l', ylim=c(90, 110))
y = rpois(1024, 100)
est = ashsmooth.pois(y)
plot(est,type='l', ylim=c(90, 110))
y = rpois(1024, 100)
est = ashsmooth.pois(y)
plot(est,type='l', ylim=c(90, 110))
y = rpois(1024, 1)
set.seed(513)
y = rpois(1024, 1)
ParentTItable
smash::ParentTItable
smash:::ParentTItable
ashsmooth.pois
getlist.res
smash:::getlist.res
set.seed(513)
y = rpois(n, 1)
wc = as.vector(t(smash:::ParentTItable(y)$parent))
zdat = glm.approx(wc, g = NULL, minobs = 1, pseudocounts = 0.5,
center = FALSE, all = TRUE, forcebin = TRUE, repara = TRUE,
lm.approx = TRUE, disp = "add", bound = 0.02)
j = 1
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
n = 1024
J = 10
set.seed(513)
y = rpois(n, 1)
wc = as.vector(t(smash:::ParentTItable(y)$parent))
zdat = glm.approx(wc, g = NULL, minobs = 1, pseudocounts = 0.5,
center = FALSE, all = TRUE, forcebin = TRUE, repara = TRUE,
lm.approx = TRUE, disp = "add", bound = 0.02)
j = 1
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat)
hist(bhat/shat,breaks=100)
j = 2
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
j = 3
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
j = 4
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
j = 4
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
j = 5
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
j = 8
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
j = 10
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
j = 7
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100)
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(dnorm(seq(-4, 4, 0.01)))
dnorm(seq(-4, 4, 0.01))
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(dnorm(seq(-4, 4, 0.01)))
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)))
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 1
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 2
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 3
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 4
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 5
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 6
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 7
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 8
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 9
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[1, ind]
shat = zdat[2, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
m = 40
y = rpois(m * n, 1)
wc = matrix(nrow = m, ncol = 2 * J * n); for(i in 1:nsimg){tt = smash:::ParentTItable(y[i, ]); wc[i, ] = as.vector(t(tt$parent))}
wc = matrix(nrow = m, ncol = 2 * J * n); for(i in 1:m){tt = smash:::ParentTItable(y[i, ]); wc[i, ] = as.vector(t(tt$parent))}
y = matrix(rpois(m * n, 1), nr = m, ncol = n)
wc = matrix(nrow = m, ncol = 2 * J * n); for(i in 1:m){tt = smash:::ParentTItable(y[i, ]); wc[i, ] = as.vector(t(tt$parent))}
ashsmooth.pois
zdat = glm.approx(wc, g = rep(0:1 , each = m/2), minobs = 1, pseudocounts = 0.5, center = FALSE, all = FALSE, forcebin = TRUE, repara = TRUE, lm.approx = TRUE, disp = "add")
j = 9
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 1
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 100, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 2
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 3
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 4
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 5
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 8
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 9
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
m = 4
y = matrix(rpois(m * n, 1), nr = m, ncol = n)
wc = matrix(nrow = m, ncol = 2 * J * n); for(i in 1:m){tt = smash:::ParentTItable(y[i, ]); wc[i, ] = as.vector(t(tt$parent))}
zdat = glm.approx(wc, g = rep(0:1 , each = m/2), minobs = 1, pseudocounts = 0.5, center = FALSE, all = FALSE, forcebin = TRUE, repara = TRUE, lm.approx = TRUE, disp = "add")
j = 9
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 1
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 2
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
j = 3
ind = ((j - 1) * n + 1):(j * n)
bhat = zdat[3, ind]
shat = zdat[4, ind]
hist(bhat/shat, breaks = 40, freq = FALSE)
lines(seq(-4, 4, 0.01), dnorm(seq(-4, 4, 0.01)), col = 2)
top_eqtl
library(dplyr)
?sperad
?spread
library(tidyr)
?spread
27500*1.45
baseline=rep(0.01,1024)
effect=rep(0,1024)
effect[400:500]=log(2)
g=c(0,0,0,1,1,1,2,2,2,2,2)
logl=matrix(0,11,1024)
for(i in 1:11){
logl[i,]=baseline+g[i]*effect
}
plot(logl[1,])
plot(logl[3,])
plot(logl[5,])
plot(logl[10,])
simdata=rpois(11*1024,logl)
plot(simdata[1,])
simdata=matrix(rpois(11*1024,logl),11,1024)
simdata[1,]
plot(simdata[1,])
plot(simdata[6,])
plot(simdata[9,])
tt=multiseq(simdata,g,lm.approx=TRUE)
library(multiseq)
tt=multiseq(simdata,g,lm.approx=TRUE)
plot(tt$baseline.mean)
plot(tt$effect.mean)
plot(tt$effect.mean,type='l')
plot(tt$baseline.mean,type='l')
plot(exp(tt$baseline.mean),type='l')
plot(exp(tt$effect.mean),type='l')
tt=multiseq(simdata,g,lm.approx=FALSE)
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,center=TRUE)
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,center=FALSE)
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,center=TRUE,baseline="grp")
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,center=TRUE,baseline="inter")
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,repara=FALSE)
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,repara=TRUE)
plot(tt$baseline.mean,type='l')
g=c(0,0,0,1,1,1)
logl=matrix(0,6,1024)
for(i in 1:6){
logl[i,]=baseline+g[i]*effect
}
simdata=matrix(rpois(6*1024,logl),6,1024)
tt=multiseq(simdata,g,repara=TRUE)
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,lm.approx=FALSE)
plot(tt$baseline.mean,type='l')
tt=multiseq(simdata,g,lm.approx=TRUE)
plot(tt$baseline.mean,type='l')
log(0.01)
spike.f=function(x) (0.75*exp(-500*(x-0.23)^2)+1.5*exp(-2000*(x-0.33)^2)+3*exp(-8000*(x-0.47)^2)+2.25*exp(-16000*(x-0.69)^2)+0.5*exp(-32000*(x-0.83)^2))
#spike.f=function(x) (0.75*exp(-500*(x-0.23)^2)+1.5*exp(-1000*(x-0.33)^2)+3*exp(-500*(x-0.47)^2)+2.25*exp(-500*(x-0.69)^2)+0.5*exp(-500*(x-0.83)^2))
n=1024
xgrid=1:n/n
mu.s=spike.f(1:n/n)
mu.s0=1
set.seed(415)
X.s=rpois(n,mu.s0*(0.02+mu.s))
set.seed(527)
X.ss=rpois(n,mu.s0*(0.02+mu.s))
mse=function(x,y) mean((x-y)^2)
n=length(X.s)
J=log2(n)
mu.s0=2
set.seed(415)
X.s1=rpois(n,mu.s0*(0.02+mu.s))
mu.s0=3
set.seed(415)
X.s2=rpois(n,mu.s0*(0.02+mu.s))
mu.s0=4
set.seed(415)
X.s3=rpois(n,mu.s0*(0.02+mu.s))
set.seed(604)
X.test=rpois(1024,5*(0.5+mu.s))
set.seed(519)
X.s4=rpois(n,1*(0.02+c(mu.s[-(1:100)],mu.s[1:100])))
set.seed(601)
X.s5=rpois(n,1*(0.02+c(mu.s[-(1:200)],mu.s[1:200])))
X.s6=(X.s+X.s5)/2
X=rbind(X.s,X.s4)
library(smash)
tb=ashsmooth.pois(X[1,])
plot(tb,type='l')
X[1,]
tb=ashsmooth.pois(X.s)
plot(tb,type='l')
X.s
mu.s0*(0.02+mu.s)
setwd("D:/Grad School/projects/sequence_clustering")
load("D:/Grad School/projects/sequence_clustering/results/test_mix.RData")
plot(y[1,])
plot(y[1,],type='l')
plot(y[2,],type='l')
plot(y[3,],type='l')
plot(y[4,],type='l')
plot(y[5,],type='l')
plot(y[6,],type='l')
plot(y[7,],type='l')
plot(y[3,],type='l')
